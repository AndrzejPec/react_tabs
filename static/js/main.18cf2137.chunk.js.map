{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isValidTabId","some","tab","id","className","map","index","onClick","href","title","find","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAWaA,EAA4B,SAAC,GAInC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEjD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GAAN,OACR,oBAEEF,WACGJ,EAAeE,EAAIC,KAAOL,EAA0B,IAAVQ,GACvC,YACA,GAENC,QAAS,WACHL,EAAIC,KAAOL,GACbC,EAAcG,IAGlB,UAAQ,MAZV,SAcE,mBAAGM,KAAI,WAAMN,EAAIC,IAAM,UAAQ,UAA/B,SAA0CD,EAAIO,SAbzCP,EAAIC,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4Ca,cCrCxCd,EAAc,CACzB,CAAEM,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOiB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAU,EAAYL,SAGf,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAegB,EAAYX,GAC3BJ,cAfgB,SAACG,GACrBa,EAAeb,UCdnBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.18cf2137.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Tab } from '../../types/types';\n\ntype TabsProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const isValidTabId = tabs.some(tab => tab.id === selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              key={tab.id}\n              className={\n                (isValidTabId ? tab.id === selectedTabId : index === 0)\n                  ? 'is-active'\n                  : ''\n              }\n              onClick={() => {\n                if (tab.id !== selectedTabId) {\n                  onTabSelected(tab);\n                }\n              }}\n              data-cy=\"Tab\"\n            >\n              <a href={`#${tab.id}`} data-cy=\"TabLink\">{tab.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/types';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}